{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.1.0\ninfo:\n  version: '1.0'\n  title: licenta\n  summary: api used for licenta\n  contact:\n    name: ''\n  description: 'description: Api to use for licenta'\nservers:\n  - url: 'https://localhost:3000/api/Base'\npaths:\n  /posts/get:\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PostResponse'\n                  x-stoplight:\n                    id: 1albm8btkr8wy\n      operationId: get-posts\n  /login:\n    put:\n      summary: ''\n      operationId: login\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserLoginDTO'\n  /register:\n    post:\n      summary: ''\n      operationId: register\n      responses:\n        '201':\n          description: Created\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegistrationDTO'\n  '/users/get/{id}':\n    get:\n      summary: Your GET endpoint\n      tags: []\n      responses:\n        '200':\n          description: OK\n          headers: {}\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UserDTO'\n      operationId: get-user-by-id\n    parameters:\n      - schema:\n          type: string\n        name: id\n        in: path\n        required: true\n  /posts:\n    post:\n      summary: ''\n      operationId: add-post\n      responses:\n        '201':\n          description: Created\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostResponse'\n        '400':\n          description: Bad Request\n        '401':\n          description: Unauthorized\n        '403':\n          description: Forbidden\n        '404':\n          description: Not Found\n        '500':\n          description: Internal Server Error\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Post'\ncomponents:\n  schemas:\n    Post:\n      title: Post\n      x-stoplight:\n        id: w0iys9t3ganp2\n      type: object\n      additionalProperties: false\n      examples: []\n      properties:\n        id:\n          type: integer\n        description:\n          type: string\n          x-stoplight:\n            id: 7kcsw2bbp99z5\n        url:\n          type: string\n          x-stoplight:\n            id: hbuaovubbs0ld\n        comments:\n          x-stoplight:\n            id: 4s7txmjhgu8tg\n          type: array\n          items:\n            $ref: '#/components/schemas/Comment'\n            x-stoplight:\n              id: 0kpnvuuyt05tz\n        userId:\n          type: string\n          x-stoplight:\n            id: 3ygrhx9z2valt\n    UserLoginDTO:\n      title: UserLoginDTO\n      x-stoplight:\n        id: bqy9nefss8c80\n      type: object\n      examples:\n        - email: string\n          password: string\n      additionalProperties: false\n      properties:\n        email:\n          type: string\n          x-stoplight:\n            id: 5grqa4kalii7j\n        password:\n          type: string\n          x-stoplight:\n            id: 7vrqmqsy5c3bi\n    TokenResponse:\n      title: TokenResponse\n      x-stoplight:\n        id: xvlg40tqeugp1\n      type: object\n      additionalProperties: false\n      properties:\n        token:\n          type: string\n          x-stoplight:\n            id: 9csglrwnfi0t3\n    RegistrationDTO:\n      title: RegistrationDTO\n      x-stoplight:\n        id: v951ld8w831ve\n      type: object\n      additionalProperties: false\n      properties:\n        userName:\n          type: string\n          x-stoplight:\n            id: q6cozpqooxvbs\n        password:\n          type: string\n          x-stoplight:\n            id: 3q2ymy6zn8rv9\n        email:\n          type: string\n          x-stoplight:\n            id: 7rxdyjogdp01s\n    UserDTO:\n      title: UserDTO\n      x-stoplight:\n        id: mlsavke3omx4u\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: string\n        email:\n          type: string\n          x-stoplight:\n            id: n67sjqckij1mf\n        userName:\n          type: string\n          x-stoplight:\n            id: 6a1nioffklcn5\n    Comment:\n      title: Comment\n      x-stoplight:\n        id: 9jefbu3mt3t79\n      type: object\n      additionalProperties: false\n      properties:\n        id:\n          type: integer\n        userId:\n          type: string\n          x-stoplight:\n            id: 8mztsi8a87cyy\n        comment:\n          type: string\n          x-stoplight:\n            id: a6wis3qxiuy0z\n        date:\n          type: string\n          x-stoplight:\n            id: pixpsrq41s7mf\n          format: date-time\n        user:\n          $ref: '#/components/schemas/UserDTO'\n          x-stoplight:\n            id: 8cme2eqspdi56\n    PostResponse:\n      title: PostResponse\n      x-stoplight:\n        id: 0gmt5hb4i7vax\n      type: object\n      additionalProperties: false\n      properties:\n        user:\n          $ref: '#/components/schemas/UserDTO'\n          x-stoplight:\n            id: vhtrfe2t0e763\n        post:\n          $ref: '#/components/schemas/Post'\n          x-stoplight:\n            id: loiwx2xb0ekdr\n",
      "url": "../models/models.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToTypeScriptClient": {
      "className": "{controller}Client",
      "moduleName": "",
      "namespace": "",
      "typeScriptVersion": 4.3,
      "template": "Angular",
      "promiseType": "Promise",
      "httpClass": "HttpClient",
      "withCredentials": false,
      "useSingletonProvider": true,
      "injectionTokenType": "InjectionToken",
      "rxJsVersion": 7.0,
      "dateTimeType": "Date",
      "nullValue": "Undefined",
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateOptionalParameters": true,
      "exportTypes": true,
      "wrapDtoExceptions": false,
      "exceptionClass": "ApiException",
      "clientBaseClass": "ClientBase",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "protectedMethods": [],
      "configurationClass": null,
      "useTransformOptionsMethod": true,
      "useTransformResultMethod": false,
      "generateDtoTypes": true,
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "markOptionalProperties": true,
      "generateCloneMethod": false,
      "typeStyle": "Class",
      "enumStyle": "Enum",
      "useLeafType": false,
      "classTypes": [],
      "extendedClasses": [],
      "extensionCode": "../../../angular-app/frontend/src/client/client-base.ts",
      "generateDefaultValues": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateTypeCheckFunctions": false,
      "generateConstructorInterface": true,
      "convertConstructorInterfaceData": false,
      "importRequiredTypes": true,
      "useGetBaseUrlMethod": false,
      "baseUrlTokenName": "API_BASE_URL",
      "queryNullValue": "",
      "useAbortSignal": false,
      "inlineNamedDictionaries": false,
      "inlineNamedAny": false,
      "includeHttpContext": false,
      "templateDirectory": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../../../angular-app/frontend/src/client/client.ts",
      "newLineBehavior": "Auto"
    },
    "openApiToCSharpController": {
      "controllerBaseClass": null,
      "controllerStyle": "Abstract",
      "controllerTarget": "AspNetCore",
      "useCancellationToken": false,
      "useActionResultType": false,
      "generateModelValidationAttributes": false,
      "routeNamingStrategy": "None",
      "basePath": null,
      "className": "{controller}",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.IEnumerable",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "API.Controllers",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.IEnumerable",
      "arrayInstanceType": "System.Collections.Generic.IEnumerable",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../Controllers/IControllerBase.cs",
      "newLineBehavior": "Auto"
    }
  }
}